version: "3"

services:

    backend:
        build: ./backend
        expose:
            - "8000"
        environment:
            - APP_CONFIG=${APP_CONFIG}
            - ETH_MODE=${ETH_MODE}
            - TZ=PRC
        volumes:
            - ./gxblog_app:/gxblog_app
        depends_on:
            - ethnode
            - mysql
        command: ./wsgi.py

    nginx:
        build: ./nginx
        ports:
            - "80:80"
        volumes:
            # - ./frontend:/usr/share/nginx/html/frontend
            - ./frontend/dist:/gxblog
            - ./backend/app/static:/gxblog/resource/static
        depends_on:
            - backend

    ethnode:
        image: ethereum/client-go
        ports:
            - "8545:8545"
            - "30303:30303"
        environment:
            - ETH_MODE=${ETH_MODE}
            - TZ=PRC
        volumes:
            - ./data/ethereum/pro:/root/pro
            - ./data/ethereum/dev:/root/dev
            - ./eth_test:/root/test
            - ./run_eth.sh:/root/run_eth.sh
        # command: bash /root/run_eth.sh
        command: "--datadir /root/dev --testnet --syncmode light --rpc --rpcaddr 0.0.0.0 --rpcapi eth,net,web3,personal"
        # command: "--datadir /root/test/data --rpc --rpcaddr 0.0.0.0 --rpcapi eth,net,web3,personal,miner"

    mysql:
        image: mysql
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        ports:
            - "3306:3306"
        environment:
            - TZ=PRC
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
        volumes:
            - ./data/mysql:/var/lib/mysql
